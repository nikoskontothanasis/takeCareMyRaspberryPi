// The failedStages variable is reused between stages
def failedStages=[]
def ip=[]
//Declarative
pipeline {
  agent { label 'RaspberryPi' }
  //parameters {}
    
  options {
    timeout(time: 1, unit: 'HOURS')
    //Skip the default checkout to clear the workspace first and then checkout in an "Initialize" stage.
    skipDefaultCheckout()
  }
  
  stages {
    stage('Find My IP') {
      steps {
      //cleanWs()
      checkout scm
        script {
         ip=sh(script: "sudo python scripts/findMyIP.py", returnStdout: true)
         echo ip
        }
      }
      post {
        failure {
          script { failedStages.add(STAGE_NAME) }
          echo "Failed at stage \"${STAGE_NAME}\" with unhandled exception."
          telegramSend(message: "Hey Nikos, Something went wrong on \"${STAGE_NAME}\". Please check it here: \"${BUILD_URL}console\"")
        }
      }      
    }
  }
  post {
    always {
      script {
          telegramSend(message: "Hi Nikos, Your IP address changed to \"${ip}\".")
        }
      }
    }
}